
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JPanel;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import javax.swing.JOptionPane;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author DELL
 */
public class ResetPassword extends javax.swing.JFrame {

    /**
     * Creates new form reset_password
     */
    public ResetPassword() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txt_input_konfirmasipassword = new javax.swing.JPasswordField();
        btn_save = new javax.swing.JToggleButton();
        txt_input_passwordbaru = new javax.swing.JPasswordField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txt_input_konfirmasipassword.setBackground(new java.awt.Color(197, 200, 205));
        txt_input_konfirmasipassword.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txt_input_konfirmasipassword.setBorder(null);
        getContentPane().add(txt_input_konfirmasipassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 392, 360, 50));

        btn_save.setOpaque(false);
        btn_save.setContentAreaFilled(false);
        btn_save.setBorderPainted(false);
        btn_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_saveActionPerformed(evt);
            }
        });
        getContentPane().add(btn_save, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 500, 200, 50));

        txt_input_passwordbaru.setBackground(new java.awt.Color(197, 200, 205));
        txt_input_passwordbaru.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txt_input_passwordbaru.setBorder(null);
        getContentPane().add(txt_input_passwordbaru, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 290, 360, 50));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui componen/Ganti Password.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_saveActionPerformed
        // TODO add your handling code here:
       String newPassword = new String(txt_input_passwordbaru.getPassword());
    String confirmPassword = new String(txt_input_konfirmasipassword.getPassword());

    // Check if the passwords match
    if (newPassword.equals(confirmPassword)) {
        // Passwords match, update password in the database
        updatePasswordInDatabase(newPassword);

        // Show success dialog
        showSuccessDialog();

        // Kembali ke frame Menu
        Menu menuFrame = new Menu();
        menuFrame.setVisible(true);

        // Tutup frame saat ini
        this.dispose();
    } else {
        // Passwords do not match, show error pop-up
        JOptionPane.showMessageDialog(this, "Password tidak cocok. Silakan coba lagi.", "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_btn_saveActionPerformed
    private void updatePasswordInDatabase(String newPassword) {
    // Lakukan koneksi ke database dan lakukan pembaruan data
    try (Connection connection = Koneksi.getKoneksi()) {
        String updateQuery = "UPDATE users SET password = ? WHERE username = ?";
        
        try (PreparedStatement preparedStatement = connection.prepareStatement(updateQuery)) {
            preparedStatement.setString(1, newPassword);
            preparedStatement.setString(2, Login.getLoggedInUsername());  // Menggunakan username yang telah login
            preparedStatement.executeUpdate();
        }
    } catch (SQLException e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Gagal mengganti password di database", "Error", JOptionPane.ERROR_MESSAGE);
    }
}
    
    private void showSuccessDialog() {
        // Create a panel to hold the components
        JPanel panel = new JPanel(new BorderLayout());
        panel.setBackground(new Color(240, 240, 240)); // Warna latar belakang

        // Add a label with a success message
        JLabel successLabel = new JLabel("Reset password berhasil!");
        successLabel.setFont(new Font("Tahoma", Font.PLAIN, 16));
        panel.add(successLabel, BorderLayout.CENTER);

        // Add a button to navigate back to the menu
        JButton btn_backToMenu = new JButton("Kembali ke Menu");
        btn_backToMenu.setFont(new Font("Tahoma", Font.BOLD, 14));
        btn_backToMenu.setBackground(new Color(30, 144, 255)); // Warna tombol
        btn_backToMenu.setForeground(Color.WHITE); // Warna teks
        btn_backToMenu.addActionListener(evt -> {
            // Kembali ke frame Menu
            Menu menuFrame = new Menu();
            menuFrame.setVisible(true);

            // Tutup frame saat ini
            dispose();
        });
        panel.add(btn_backToMenu, BorderLayout.SOUTH);

        // Create the dialog
        JDialog dialog = new JDialog(this, "Sukses!", true);
        dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
        dialog.getContentPane().add(panel);
        dialog.setSize(300, 150);
        dialog.setLocationRelativeTo(this);
        dialog.setVisible(true);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ResetPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ResetPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ResetPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ResetPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ResetPassword().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton btn_save;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPasswordField txt_input_konfirmasipassword;
    private javax.swing.JPasswordField txt_input_passwordbaru;
    // End of variables declaration//GEN-END:variables
}
