/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import javax.swing.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
/**
 *
 * @author DELL
 */
public class LupaPassword extends javax.swing.JFrame {
    
    private String email;
    private JDialog successDialog;
    private final Login loginFrame;

    void setEmail(String email) {
    this.email = email;
}
    public LupaPassword(Login loginFrame) {
        initComponents();
        this.loginFrame = loginFrame;
        initSuccessDialog();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        password = new javax.swing.JPasswordField();
        konfirmasi = new javax.swing.JPasswordField();
        btn_save = new javax.swing.JToggleButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        password.setBackground(new java.awt.Color(197, 200, 205));
        password.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        password.setBorder(null);
        password.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordActionPerformed(evt);
            }
        });
        getContentPane().add(password, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 290, 370, 50));

        konfirmasi.setBackground(new java.awt.Color(197, 200, 205));
        konfirmasi.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        konfirmasi.setBorder(null);
        konfirmasi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                konfirmasiActionPerformed(evt);
            }
        });
        getContentPane().add(konfirmasi, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 390, 350, 50));

        btn_save.setOpaque(false);
        btn_save.setContentAreaFilled(false);
        btn_save.setBorderPainted(false);
        btn_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_saveActionPerformed(evt);
            }
        });
        getContentPane().add(btn_save, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 500, 180, 50));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui componen/lupas.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void initSuccessDialog() {
        successDialog = new JDialog(this, "Ganti Password Berhasil", true);
    successDialog.setSize(400, 200);
    successDialog.setLayout(new java.awt.FlowLayout());
    successDialog.getContentPane().setBackground(new java.awt.Color(255, 255, 255));

    JLabel successLabel = new JLabel("Ganti password berhasil!");
    successLabel.setFont(new java.awt.Font("Tahoma", 1, 18));
    successLabel.setForeground(new java.awt.Color(0, 102, 0));

    JButton btnBackToLogin = new JButton("Kembali ke Login");
    btnBackToLogin.setBackground(new java.awt.Color(0, 102, 204));
    btnBackToLogin.setForeground(new java.awt.Color(255, 255, 255));
    btnBackToLogin.addActionListener((ActionEvent e) -> {
        successDialog.dispose();
        // Tambahkan logika untuk kembali ke frame login di sini
        });

    successDialog.add(successLabel);
    successDialog.add(btnBackToLogin);
}
    private void konfirmasiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_konfirmasiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_konfirmasiActionPerformed

    private void passwordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordActionPerformed

    private void btn_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_saveActionPerformed
                                            
    try {
        // Validasi bahwa password baru dan konfirmasi password sama
        String newPassword = new String(password.getPassword());
        String confirmPassword = new String(konfirmasi.getPassword());

        if (!newPassword.equals(confirmPassword)) {
            JOptionPane.showMessageDialog(this, "Password baru tidak cocok dengan konfirmasi password", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Validasi panjang minimum password (contoh: setidaknya 6 karakter)
        if (newPassword.length() < 6) {
            JOptionPane.showMessageDialog(this, "Password harus memiliki setidaknya 6 karakter", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Update password ke dalam database
        Connection connection = Koneksi.getKoneksi();

        String updateQuery = "UPDATE users SET password = ? WHERE email = ?";
        try (PreparedStatement preparedStatement = connection.prepareStatement(updateQuery)) {
            preparedStatement.setString(1, newPassword);
            preparedStatement.setString(2, email);  // Menggunakan email yang telah di-set melalui setEmail
            preparedStatement.executeUpdate();
        }

        // Menampilkan dialog sukses
        successDialog.setLocationRelativeTo(this);
        successDialog.setVisible(true);

        // Menutup frame LupaPassword
        this.dispose();

        // Kembali ke frame Login
        loginFrame.setVisible(true);
    } catch (SQLException e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Gagal mengganti password", "Error", JOptionPane.ERROR_MESSAGE);
    }


    }//GEN-LAST:event_btn_saveActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LupaPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton btn_save;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPasswordField konfirmasi;
    private javax.swing.JPasswordField password;
    // End of variables declaration//GEN-END:variables

    
}
